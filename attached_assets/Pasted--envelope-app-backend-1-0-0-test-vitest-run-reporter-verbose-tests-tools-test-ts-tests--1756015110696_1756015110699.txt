
> envelope-app-backend@1.0.0 test
> vitest run --reporter=verbose __tests__/tools.test.ts __tests__/integration.test.ts __tests__/validation.test.ts
 RUN  v1.6.1 /home/runner/workspace

stdout | src/config/env.ts:57:11
[env] ✅ OpenAI configured successfully

stdout | src/config/env.ts:58:38
[env] Project ID: proj_0oB7cBSGNAFJaUlNQVw9LZro

stdout | src/config/env.ts:59:34
[env] Org ID: org-ieazhDvHBbXEfUHFDyEBcnz4

stdout | src/config/env.ts:60:11
[env] API Key: sk-svca...

stderr | src/lib/openai.ts:53:11
[openai] ❌ Failed to initialize client: Error: [vitest] No "setDefaultOpenAIKey" export is defined on the "@openai/agents" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError (file:///home/runner/workspace/node_modules/vitest/dist/vendor/execute.fL3szUAI.js:79:19)
    at Object.get (file:///home/runner/workspace/node_modules/vitest/dist/vendor/execute.fL3szUAI.js:153:22)
    at /home/runner/workspace/src/lib/openai.ts:34:5
    at VitestExecutor.runModule (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:362:5)
    at VitestExecutor.directRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:346:5)
    at VitestExecutor.cachedRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:189:14)
    at VitestExecutor.dependencyRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:233:12)
    at /home/runner/workspace/src/agents/agentRegistry.ts:3:31
    at VitestExecutor.runModule (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:362:5)
    at VitestExecutor.directRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:346:5) {
  codeFrame: 'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[32m"@openai/agents"\x1B[39m\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n' +
    '  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n' +
    '  \x1B[35mreturn\x1B[39m {\n' +
    '    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n' +
    '    \x1B[90m// your mocked methods\x1B[39m\n' +
    '  }\n' +
    '})'
}

stdout | src/config/env.ts:57:11
[env] ✅ OpenAI configured successfully

stdout | src/config/env.ts:58:38
[env] Project ID: proj_0oB7cBSGNAFJaUlNQVw9LZro

stdout | src/config/env.ts:59:34
[env] Org ID: org-ieazhDvHBbXEfUHFDyEBcnz4

stdout | src/config/env.ts:60:11
[env] API Key: sk-svca...

stderr | src/lib/openai.ts:53:11
[openai] ❌ Failed to initialize client: Error: [vitest] No "setDefaultOpenAIKey" export is defined on the "@openai/agents" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError (file:///home/runner/workspace/node_modules/vitest/dist/vendor/execute.fL3szUAI.js:79:19)
    at Object.get (file:///home/runner/workspace/node_modules/vitest/dist/vendor/execute.fL3szUAI.js:153:22)
    at /home/runner/workspace/src/lib/openai.ts:34:5
    at VitestExecutor.runModule (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:362:5)
    at VitestExecutor.directRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:346:5)
    at VitestExecutor.cachedRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:189:14)
    at VitestExecutor.dependencyRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:233:12)
    at /home/runner/workspace/src/agents/agentRegistry.ts:3:31
    at VitestExecutor.runModule (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:362:5)
    at VitestExecutor.directRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:346:5) {
  codeFrame: 'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[32m"@openai/agents"\x1B[39m\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n' +
    '  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n' +
    '  \x1B[35mreturn\x1B[39m {\n' +
    '    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n' +
    '    \x1B[90m// your mocked methods\x1B[39m\n' +
    '  }\n' +
    '})'
}

{"level":20,"time":1756015075442,"pid":19455,"hostname":"a409799f0c85","agentType":"financial_advisor","assignedTools":["generate_recommendations","identify_opportunities","track_achievements","agent_handoff"],"foundTools":0,"msg":"Retrieved tools for agent"}
{"level":20,"time":1756015075443,"pid":19455,"hostname":"a409799f0c85","agentType":"budget_coach","assignedTools":["budget_analysis","spending_patterns","variance_calculation","create_envelope","transfer_funds","manage_balance","optimize_categories","agent_handoff"],"foundTools":0,"msg":"Retrieved tools for agent"}
{"level":20,"time":1756015075443,"pid":19455,"hostname":"a409799f0c85","agentType":"transaction_analyst","assignedTools":["categorize_transaction","auto_allocate","recognize_patterns","detect_anomalies","analyze_spending_patterns","analyze_budget_variance","agent_handoff"],"foundTools":0,"msg":"Retrieved tools for agent"}
{"level":20,"time":1756015075443,"pid":19455,"hostname":"a409799f0c85","agentType":"insight_generator","assignedTools":["analyze_trends","analyze_goal_progress","generate_recommendations","identify_opportunities","detect_warnings","track_achievements","agent_handoff"],"foundTools":0,"msg":"Retrieved tools for agent"}
{"level":30,"time":1756015075443,"pid":19455,"hostname":"a409799f0c85","agentCount":4,"agentNames":["financial_advisor","budget_coach","transaction_analyst","insight_generator"],"msg":"Financial coaching agents initialized successfully"}
     ❯ Business Logic Validation (3)
       × should validate financial constraints
       × should validate budget constraints
       × should validate date constraints
 ❯ src/agents/__tests__/tools.test.ts (0)
{"level":30,"time":1756015075458,"pid":19455,"hostname":"a409799f0c85","msg":"Initializing Agent Management System..."}
{"level":50,"time":1756015075459,"pid":19455,"hostname":"a409799f0c85","error":{},"msg":"Failed to initialize tools"}
{"level":30,"time":1756015075459,"pid":19455,"hostname":"a409799f0c85","msg":"Agent registry al
 ❯ src/agents/__tests__/validation.test.ts (20)
   ❯ Data Validation Tests (20)
     ✓ Schema Validation (7)
       ✓ AgentConfigSchema (2)
         ✓ should validate correct agent configuration
         ✓ should reject invalid agent configuration
       ✓ FinancialContextSchema (3)
         ✓ should validate correct financial context
         ✓ should accept minimal financial context
         ✓ should reject invalid financial context
       ✓ AgentResponseSchema (2)
         ✓ should validate correct agent response
         ✓ should reject invalid agent response
     ❯ Tool Parameter Validation (2)
       ✓ should validate budget analysis parameters
       × should reject invalid tool parameters
     ❯ Error Handling Validation (3)
       × should handle database validation errors gracefully
       × should validate agent handoff parameters
       × should reject invalid handoff parameters
     ❯ Input Sanitization (3)
       ✓ should sanitize user input messages
       × should handle SQL injection attempts in parameters
       × should validate envelope creation with proper limits
     ✓ Type Safety Validation (2)
       ✓ should enforce type safety in agent responses
       ✓ should enforce type safety in financial context
     ❯ Business Logic Validation (3)
       × should validate financial constraints
       × should validate budget constraints
       × should validate date constraints
 ❯ src/agents/__tests__/tools.test.ts (0)
 ❯ src/agents/__tests__/integration.test.ts (0)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯ Failed Suites 2 ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯

 FAIL  src/agents/__tests__/integration.test.ts [ src/agents/__tests__/integration.test.ts ]
Error: [vitest] No "defineTool" export is defined on the "@openai/agents" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi.mock("@openai/agents", async (importOriginal) => {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ src/agents/tools/budget.ts:30:35
     28| 
     29| // Define tools using OpenAI SDK pattern
     30| export const budgetAnalysisTool = defineTool({
       |                                   ^
     31|   name: 'budget_analysis',
     32|   description: 'Analyzes user budget performance, spending patterns, and provides det…
 ❯ src/agents/tools/index.ts:2:31

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/11]⎯

 FAIL  src/agents/__tests__/tools.test.ts [ src/agents/__tests__/tools.test.ts ]
TypeError: defineTool is not a function
 ❯ src/agents/tools/budget.ts:30:35
     28| 
     29| // Define tools using OpenAI SDK pattern
     30| export const budgetAnalysisTool = defineTool({
       |                                   ^
     31|   name: 'budget_analysis',
     32|   description: 'Analyzes user budget performance, spending patterns, and provides det…
 ❯ src/agents/tools/index.ts:2:31

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/11]⎯

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯ Failed Tests 9 ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯

 FAIL  src/agents/__tests__/validation.test.ts > Data Validation Tests > Tool Parameter Validation > should reject invalid tool parameters
AssertionError: expected 'Tool not found: create_envelope' to contain 'validation'

- Expected
+ Received

- validation
+ Tool not found: create_envelope

 ❯ src/agents/__tests__/validation.test.ts:209:28
    207|       const result = await toolRegistry.executeTool('create_envelope', invalidParams,…
    208|       expect(result.success).toBe(false);
    209|       expect(result.error).toContain('validation');
       |                            ^
    210|     });
    211|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/11]⎯

 FAIL  src/agents/__tests__/validation.test.ts > Data Validation Tests > Error Handling Validation > should handle database validation errors gracefully
AssertionError: expected 'Tool not found: budget_analysis' to contain 'Validation failed'

- Expected
+ Received

- Validation failed
+ Tool not found: budget_analysis

 ❯ src/agents/__tests__/validation.test.ts:234:28
    232| 
    233|       expect(result.success).toBe(false);
    234|       expect(result.error).toContain('Validation failed');
       |                            ^
    235|     });
    236| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/11]⎯

 FAIL  src/agents/__tests__/validation.test.ts > Data Validation Tests > Error Handling Validation > should validate agent handoff parameters
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/agents/__tests__/validation.test.ts:252:30
    250|       );
    251| 
    252|       expect(result.success).toBe(true);
       |                              ^
    253|     });
    254| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/11]⎯

 FAIL  src/agents/__tests__/validation.test.ts > Data Validation Tests > Error Handling Validation > should reject invalid handoff parameters
AssertionError: expected 'Tool not found: agent_handoff' to contain 'validation'

- Expected
+ Received

- validation
+ Tool not found: agent_handoff

 ❯ src/agents/__tests__/validation.test.ts:270:28
    268| 
    269|       expect(result.success).toBe(false);
    270|       expect(result.error).toContain('validation');
       |                            ^
    271|     });
    272|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/11]⎯

 FAIL  src/agents/__tests__/validation.test.ts > Data Validation Tests > Input Sanitization > should handle SQL injection attempts in parameters
AssertionError: expected 'Tool not found: categorize_transaction' to contain 'validation'

- Expected
+ Received

- validation
+ Tool not found: categorize_transaction

 ❯ src/agents/__tests__/validation.test.ts:303:28
    301|       // Should handle gracefully without executing malicious SQL
    302|       expect(result.success).toBe(false);
    303|       expect(result.error).toContain('validation');
       |                            ^
    304|     });
    305| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/11]⎯

 FAIL  src/agents/__tests__/validation.test.ts > Data Validation Tests > Input Sanitization > should validate envelope creation with proper limits
AssertionError: expected 'Tool not found: create_envelope' to contain 'validation'

- Expected
+ Received

- validation
+ Tool not found: create_envelope

 ❯ src/agents/__tests__/validation.test.ts:321:28
    319| 
    320|       expect(result.success).toBe(false);
    321|       expect(result.error).toContain('validation');
       |                            ^
    322|     });
    323|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/11]⎯

 FAIL  src/agents/__tests__/validation.test.ts > Data Validation Tests > Business Logic Validation > should validate financial constraints
AssertionError: expected 'Tool not found: transfer_funds' to contain 'positive amount'

- Expected
+ Received

- positive amount
+ Tool not found: transfer_funds

 ❯ src/agents/__tests__/validation.test.ts:365:28
    363| 
    364|       expect(result.success).toBe(false);
    365|       expect(result.error).toContain('positive amount');
       |                            ^
    366|     });
    367| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/11]⎯

 FAIL  src/agents/__tests__/validation.test.ts > Data Validation Tests > Business Logic Validation > should validate budget constraints
AssertionError: expected 'Tool not found: create_envelope' to contain 'validation'

- Expected
+ Received

- validation
+ Tool not found: create_envelope

 ❯ src/agents/__tests__/validation.test.ts:383:28
    381| 
    382|       expect(result.success).toBe(false);
    383|       expect(result.error).toContain('validation');
       |                            ^
    384|     });
    385| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/11]⎯

 FAIL  src/agents/__tests__/validation.test.ts > Data Validation Tests > Business Logic Validation > should validate date constraints
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/agents/__tests__/validation.test.ts:401:30
    399| 
    400|       // Should handle past dates gracefully
    401|       expect(result.success).toBe(true);
       |                              ^
    402|       if (result.success && result.result.warnings) {
    403|         expect(result.result.warnings).toContain('past date');

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/11]⎯

 Test Files  3 failed (3)
      Tests  9 failed | 11 passed (20)
   Start at  05:57:52
   Duration  3.04s (transform 854ms, setup 0ms, collect 626ms, tests 39ms, environment 1ms, prepare 1.00s)


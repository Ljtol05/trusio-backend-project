~/workspace$ npm run test:agents -- --run --reporter=verbose src/agents/__tests__/validation.test.ts

> envelope-app-backend@1.0.0 test:agents
> vitest run --config vitest.config.agents.ts --run --reporter=verbose src/agents/__tests__/validation.test.ts


 RUN  v1.6.1 /home/runner/workspace

 ❯ |agents| src/agents/__tests__/validation.test.ts (0)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯ Failed Suites 1 ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯

 FAIL  |agents| src/agents/__tests__/validation.test.ts [ src/agents/__tests__/validation.test.ts ]
Error: Transform failed with 2 errors:
/home/runner/workspace/src/agents/types.ts:137:13: ERROR: Multiple exports with the same name "AgentContextSchema"
/home/runner/workspace/src/agents/types.ts:137:13: ERROR: The symbol "AgentContextSchema" has already been declared
 ❯ failureErrorWithLog node_modules/vite/node_modules/esbuild/lib/main.js:1472:15
 ❯ node_modules/vite/node_modules/esbuild/lib/main.js:755:50
 ❯ responseCallbacks.<computed> node_modules/vite/node_modules/esbuild/lib/main.js:622:9
 ❯ handleIncomingPacket node_modules/vite/node_modules/esbuild/lib/main.js:677:12
 ❯ Socket.readFromStdout node_modules/vite/node_modules/esbuild/lib/main.js:600:7
 ❯ Socket.emit node:events:518:28

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯

 Test Files  1 failed (1)
      Tests  no tests
   Start at  00:32:19
   Duration  754ms (transform 328ms, setup 152ms, collect 0ms, tests 0ms, environment 0ms, prepare 114ms)

~/workspace$ npm run test:agents -- --run --reporter=verbose src/agents/__tests__/security.test.ts

> envelope-app-backend@1.0.0 test:agents
> vitest run --config vitest.config.agents.ts --run --reporter=verbose src/agents/__tests__/security.test.ts


 RUN  v1.6.1 /home/runner/workspace

 ❯ |agents| src/agents/__tests__/security.test.ts (15)
   ❯ Security Middleware (15)
     ❯ Input Sanitization (3)
       ✓ should sanitize XSS attempts
       × should sanitize email inputs
       × should sanitize alphanumeric inputs
     ❯ Threat Detection (4)
       ✓ should detect XSS attempts
       ✓ should detect SQL injection attempts
       ✓ should detect path traversal attempts
       × should detect command injection attempts
     ❯ Input Validation (3)
       ✓ should validate and sanitize simple strings
       × should validate complex objects
       ✓ should pass safe inputs
     ❯ Security Middleware Integration (5)
       ✓ should block malicious requests
       ✓ should allow safe requests
       × should sanitize inputs when enabled
       ✓ should enforce rate limiting
       ✓ should add security headers

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯ Failed Tests 5 ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯

 FAIL  |agents| src/agents/__tests__/security.test.ts > Security Middleware > Input Sanitization > should sanitize email inputs
AssertionError: expected 'usertag@domain.co.uk' to be 'user+tag@domain.co.uk' // Object.is equality

- Expected
+ Received

- user+tag@domain.co.uk
+ usertag@domain.co.uk

 ❯ src/agents/__tests__/security.test.ts:56:27
     54|       inputs.forEach((input, index) => {
     55|         const sanitized = sanitizeEmail(in…
     56|         expect(sanitized).toBe(expected[in…
       |                           ^
     57|       });
     58|     });
 ❯ src/agents/__tests__/security.test.ts:54:14

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/5]⎯

 FAIL  |agents| src/agents/__tests__/security.test.ts > Security Middleware > Input Sanitization > should sanitize alphanumeric inputs
AssertionError: expected 'useronclickalert1' not to contain 'onclick'

- Expected
+ Received

- onclick
+ useronclickalert1

 ❯ src/agents/__tests__/security.test.ts:72:31
     70|         expect(sanitized).toMatch(/^[a-zA-…
     71|         expect(sanitized).not.toContain('<…
     72|         expect(sanitized).not.toContain('o…
       |                               ^
     73|         expect(sanitized).not.toContain('D…
     74|         expect(sanitized).not.toContain('`…
 ❯ src/agents/__tests__/security.test.ts:68:23

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/5]⎯

 FAIL  |agents| src/agents/__tests__/security.test.ts > Security Middleware > Threat Detection > should detect command injection attempts
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/agents/__tests__/security.test.ts:166:51
    164| 
    165|       commandInjections.forEach(injection …
    166|         expect(detectCommandInjection(inje…
       |                                                   ^
    167|       });
    168| 
 ❯ src/agents/__tests__/security.test.ts:165:25

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/5]⎯

 FAIL  |agents| src/agents/__tests__/security.test.ts > Security Middleware > Input Validation > should validate complex objects
AssertionError: expected [ 'COMMAND_INJECTION', …(2) ] to include 'XSS'
 ❯ src/agents/__tests__/security.test.ts:206:30
    204|       
    205|       expect(result.isValid).toBe(false);
    206|       expect(result.threats).toContain('XS…
       |                              ^
    207|       expect(result.threats).toContain('SQ…
    208|       expect(result.sanitized.name).not.to…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/5]⎯

 FAIL  |agents| src/agents/__tests__/security.test.ts > Security Middleware > Security Middleware Integration > should sanitize inputs when enabled
AssertionError: expected 'John<script>alert(1)</script> Doe' not to contain '<script'

- Expected
+ Received

- <script
+ John<script>alert(1)</script> Doe

 ❯ src/agents/__tests__/security.test.ts:287:43
    285|         .expect(200);
    286| 
    287|       expect(response.body.data.name).not.…
       |                                           ^
    288|       expect(response.body.data.name).toCo…
    289|       expect(response.body.data.name).toCo…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/5]⎯

 Test Files  1 failed (1)
      Tests  5 failed | 10 passed (15)
   Start at  00:32:26
   Duration  761ms (transform 123ms, setup 86ms, collect 168ms, tests 144ms, environment 0ms, prepare 143ms)
~/workspace$ npm run test -- --reporter=verbose src/agents/__tests__/

> envelope-app-backend@1.0.0 test
> vitest run --reporter=verbose src/agents/__tests__/


 RUN  v1.6.1 /home/runner/workspace

stdout | src/config/env.ts:57:11
[env] ✅ OpenAI configured successfully

stdout | src/config/env.ts:58:38
[env] Project ID: proj_0oB7cBSGNAFJaUlNQVw9LZro

stdout | src/config/env.ts:59:34
[env] Org ID: org-ieazhDvHBbXEfUHFDyEBcnz4

stdout | src/config/env.ts:60:11
[env] API Key: sk-svca...

stderr | src/lib/openai.ts:53:11
[openai] ❌ Failed to initialize client: Error: [vitest] No "setOpenAIAPI" export is defined on the "@openai/agents" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError (file:///home/runner/workspace/node_modules/vitest/dist/vendor/execute.fL3szUAI.js:79:19)
    at Object.get (file:///home/runner/workspace/node_modules/vitest/dist/vendor/execute.fL3szUAI.js:153:22)
    at /home/runner/workspace/src/lib/openai.ts:36:5
    at VitestExecutor.runModule (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:362:5)
    at VitestExecutor.directRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:346:5)
    at VitestExecutor.cachedRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:189:14)
    at VitestExecutor.dependencyRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:233:12)
    at /home/runner/workspace/src/agents/agentRegistry.ts:3:31
    at VitestExecutor.runModule (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:362:5)
    at VitestExecutor.directRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:346:5) {
  codeFrame: 'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[32m"@openai/agents"\x1B[39m\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n' +
    '  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n' +
    '  \x1B[35mreturn\x1B[39m {\n' +
    '    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n' +
    '    \x1B[90m// your mocked methods\x1B[39m\n' +
    '  }\n' +
    '})'
}

stdout | src/config/env.ts:57:11
[env] ✅ OpenAI configured successfully

stdout | src/config/env.ts:58:38
[env] Project ID: proj_0oB7cBSGNAFJaUlNQVw9LZro

stdout | src/config/env.ts:59:34
[env] Org ID: org-ieazhDvHBbXEfUHFDyEBcnz4

stdout | src/config/env.ts:60:11
[env] API Key: sk-svca...

stderr | src/lib/openai.ts:53:11
[openai] ❌ Failed to initialize client: Error: [vitest] No "setDefaultOpenAIKey" export is defined on the "@openai/agents" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError (file:///home/runner/workspace/node_modules/vitest/dist/vendor/execute.fL3szUAI.js:79:19)
    at Object.get (file:///home/runner/workspace/node_modules/vitest/dist/vendor/execute.fL3szUAI.js:153:22)
    at /home/runner/workspace/src/lib/openai.ts:34:5
    at VitestExecutor.runModule (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:362:5)
    at VitestExecutor.directRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:346:5)
    at VitestExecutor.cachedRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:189:14)
    at VitestExecutor.dependencyRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:233:12)
    at /home/runner/workspace/src/agents/agentRegistry.ts:3:31
    at VitestExecutor.runModule (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:362:5)
    at VitestExecutor.directRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:346:5) {
  codeFrame: 'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[32m"@openai/agents"\x1B[39m\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n' +
    '  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n' +
    '  \x1B[35mreturn\x1B[39m {\n' +
    '    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n' +
    '    \x1B[90m// your mocked methods\x1B[39m\n' +
    '  }\n' +
    '})'
}

stdout | src/config/env.ts:57:11
[env] ✅ OpenAI configured successfully

stdout | src/config/env.ts:58:38
[env] Project ID: proj_0oB7cBSGNAFJaUlNQVw9LZro

stdout | src/config/env.ts:59:34
[env] Org ID: org-ieazhDvHBbXEfUHFDyEBcnz4

stdout | src/config/env.ts:60:11
[env] API Key: sk-svca...

stdout | src/config/env.ts:57:11
[env] ✅ OpenAI configured successfully

stdout | src/config/env.ts:58:38
[env] Project ID: proj_0oB7cBSGNAFJaUlNQVw9LZro

stdout | src/config/env.ts:59:34
[env] Org ID: org-ieazhDvHBbXEfUHFDyEBcnz4

stdout | src/config/env.ts:60:11
[env] API Key: sk-svca...

stderr | src/lib/openai.ts:53:11
[openai] ❌ Failed to initialize client: Error: [vitest] No "setDefaultOpenAIKey" export is defined on the "@openai/agents" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError (file:///home/runner/workspace/node_modules/vitest/dist/vendor/execute.fL3szUAI.js:79:19)
    at Object.get (file:///home/runner/workspace/node_modules/vitest/dist/vendor/execute.fL3szUAI.js:153:22)
    at /home/runner/workspace/src/lib/openai.ts:34:5
    at VitestExecutor.runModule (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:362:5)
    at VitestExecutor.directRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:346:5)
    at VitestExecutor.cachedRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:189:14)
    at VitestExecutor.dependencyRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:233:12)
    at /home/runner/workspace/src/agents/agentRegistry.ts:3:31
    at VitestExecutor.runModule (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:362:5)
    at VitestExecutor.directRequest (file:///home/runner/workspace/node_modules/vite-node/dist/client.mjs:346:5) {
  codeFrame: 'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[32m"@openai/agents"\x1B[39m\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n' +
    '  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n' +
    '  \x1B[35mreturn\x1B[39m {\n' +
    '    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n' +
    '    \x1B[90m// your mocked methods\x1B[39m\n' +
    '  }\n' +
    '})'
}

{"level":20,"time":1756119050425,"pid":1077,"hostname":"7ae1ad007f4c","agentType":"financial_advisor","assignedTools":["generate_recommendations","identify_opportunities","track_achievements","agent_handoff"],"foundTools":0,"msg":"Retrieved tools for agent"}
 ❯ src/agents/__tests__/integration.test.
ts (0)
 ❯ src/agents/__tests__/validation.test.t
s (0)
 ❯ src/agents/__tests__/performance.test.
ts (0)
 ✓ src/agents/__tests__/tools.test.ts (14
)
   ✓ Financial Tools (14)
     ✓ Tool Registry (2)
       ✓ should have all required transac
tion tools registered
       ✓ should return correct tool count
     ✓ Budget Tools (2)
       ✓ should execute budget analysis t
ool successfully
       ✓ should handle budget analysis er
rors gracefully
     ✓ Envelope Tools (2)
       ✓ should create envelope successfu
lly
       ✓ should transfer funds between en
velopes
     ✓ Transaction Tools (2)
       ✓ should categorize transactions c
orrectly
       ✓ should analyze spending patterns
     ✓ Analysis Tools (1)
       ✓ should analyze budget variance
     ✓ Insight Tools (2)
       ✓ should generate personalized rec
ommendations
       ✓ should identify financial opport
unities
     ✓ Agent Handoff Tool (1)
       ✓ should execute agent handoff suc
cessfully
     ✓ Tool Error Handling (2)
       ✓ should handle non-existent tool 
 ✓ src/agents/__tests__/tools.test.ts (14
)
   ✓ Financial Tools (14)
     ✓ Tool Registry (2)
       ✓ should have all required transac
tion tools registered
       ✓ should return correct tool count
     ✓ Budget Tools (2)
       ✓ should execute budget analysis t
ool successfully
       ✓ should handle budget analysis er
rors gracefully
     ✓ Envelope Tools (2)
       ✓ should create envelope successfu
lly
       ✓ should transfer funds between en
velopes
     ✓ Transaction Tools (2)
       ✓ should categorize transactions c
orrectly
       ✓ should analyze spending patterns
     ✓ Analysis Tools (1)
       ✓ should analyze budget variance
     ✓ Insight Tools (2)
       ✓ should generate personalized rec
ommendations
       ✓ should identify financial opport
unities
     ✓ Agent Handoff Tool (1)
       ✓ should execute agent handoff suc
cessfully
     ✓ Tool Error Handling (2)
       ✓ should handle non-existent tool 
gracefully
       ✓ should handle tool execution tim
eout
 · src/agents/__tests__/agentRegistry.tes
t.ts (12)
   · AgentRegistry (12)
     · Agent Initialization (2)
       · should initialize all required a
gents
       · should properly assign tools to 
agents
     · Agent Routing (4)
       · should route budget-related mess
ages to budget coach
       · should route transaction-related
 messages to transaction analyst
       · should route insight-related mes
sages to insight generator
       · should default to financial advi
sor for general messages
     · Agent Execution (3)
       · should successfully run an agent
 with context
       · should handle agent execution er
rors gracefully
       · should throw error for non-exist
ent agent
     · Agent Capabilities (2)
       · should return correct capabiliti
es for each agent
       · should return empty array for no
n-existent agent capabilities
 ✓ src/agents/__tests__/tools.test.ts (14
)
   ✓ Financial Tools (14)
     ✓ Tool Registry (2)
       ✓ should have all required transac
tion tools registered
       ✓ should return correct tool count
     ✓ Budget Tools (2)
       ✓ should execute budget analysis t
ool successfully
       ✓ should handle budget analysis er
rors gracefully
     ✓ Envelope Tools (2)
       ✓ should create envelope successfu
lly
       ✓ should transfer funds between en
velopes
     ✓ Transaction Tools (2)
       ✓ should categorize transactions c
orrectly
       ✓ should analyze spending patterns
     ✓ Analysis Tools (1)
       ✓ should analyze budget variance
     ✓ Insight Tools (2)
       ✓ should generate personalized rec
 ❯ src/agents/__tests__/integration.test.ts (0)
 ❯ src/agents/__tests__/validation.test.ts (0)
 ❯ src/agents/__tests__/performance.test.ts (0)
 ✓ src/agents/__tests__/tools.test.ts (14)
   ✓ Financial Tools (14)
     ✓ Tool Registry (2)
       ✓ should have all required transaction tools registered
       ✓ should return correct tool count
     ✓ Budget Tools (2)
       ✓ should execute budget analysis tool successfully
       ✓ should handle budget analysis errors gracefully
     ✓ Envelope Tools (2)
       ✓ should create envelope successfully
       ✓ should transfer funds between envelopes
     ✓ Transaction Tools (2)
       ✓ should categorize transactions correctly
       ✓ should analyze spending patterns
     ✓ Analysis Tools (1)
       ✓ should analyze budget variance
     ✓ Insight Tools (2)
       ✓ should generate personalized recommendations
       ✓ should identify financial opportunities
     ✓ Agent Handoff Tool (1)
       ✓ should execute agent handoff successfully
     ✓ Tool Error Handling (2)
       ✓ should handle non-existent tool gracefully
       ✓ should handle tool execution timeout
 ✓ src/agents/__tests__/agentRegistry.test.ts (12)
   ✓ AgentRegistry (12)
     ✓ Agent Initialization (2)
       ✓ should initialize all required agents
       ✓ should properly assign tools to agents
     ✓ Agent Routing (4)
       ✓ should route budget-related messages to budget coach
       ✓ should route transaction-related messages to transaction analyst
       ✓ should route insight-related messages to insight generator
       ✓ should default to financial advisor for general messages
     ✓ Agent Execution (3)
       ✓ should successfully run an agent with context
       ✓ should handle agent execution errors gracefully
       ✓ should throw error for non-existent agent
     ✓ Agent Capabilities (2)
       ✓ should return correct capabilities for each agent
       ✓ should return empty array for non-existent agent capabilities
     ✓ Agent Metrics (1)
       ✓ should return comprehensive metrics for all agents

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯ Failed Suites 3 ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯

 FAIL  src/agents/__tests__/integration.test.ts [ src/agents/__tests__/integration.test.ts ]
Error: Transform failed with 1 error:
/home/runner/workspace/src/agents/tools/index.ts:2:16: ERROR: Expected "(" but found "{"
 ❯ failureErrorWithLog node_modules/vite/node_modules/esbuild/lib/main.js:1472:15
 ❯ node_modules/vite/node_modules/esbuild/lib/main.js:755:50
 ❯ responseCallbacks.<computed> node_modules/vite/node_modules/esbuild/lib/main.js:622:9
 ❯ handleIncomingPacket node_modules/vite/node_modules/esbuild/lib/main.js:677:12
 ❯ Socket.readFromStdout node_modules/vite/node_modules/esbuild/lib/main.js:600:7
 ❯ Socket.emit node:events:518:28

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/3]⎯

 FAIL  src/agents/__tests__/performance.test.ts [ src/agents/__tests__/performance.test.ts ]
 FAIL  src/agents/__tests__/validation.test.ts [ src/agents/__tests__/validation.test.ts ]
Error: Failed to load url ../tools/registry.js (resolved id: ../tools/registry.js) in /home/runner/workspace/src/agents/__tests__/validation.test.ts. Does the file exist?
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-C6uTJdX2.js:51968:17

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/3]⎯

 Test Files  3 failed | 2 passed (5)
      Tests  26 passed (26)
   Start at  10:50:48
   Duration  1.83s (transform 464ms, setup 0ms, collect 333ms, tests 140ms, environment 2ms, prepare 988ms)
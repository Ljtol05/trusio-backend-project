⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯ Failed Tests 43 ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯

 FAIL  |agents| src/agents/__tests__/agentRegistry.test.ts > AgentRegistry > Agent Initialization > should initialize all required agents
AssertionError: expected [ 'defaultModel', …(20) ] to include 'financial_advisor'
 ❯ src/agents/__tests__/agentRegistry.test.ts:82:26
     80|       
     81|       const agentNames = Array.from(agentR…
     82|       expect(agentNames).toContain('financ…
       |                          ^
     83|       expect(agentNames).toContain('budget…
     84|       expect(agentNames).toContain('transa…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/43]⎯

 FAIL  |agents| src/agents/__tests__/agentRegistry.test.ts > AgentRegistry > Agent Initialization > should properly assign tools to agents
AssertionError: expected undefined not to be undefined
 ❯ src/agents/__tests__/agentRegistry.test.ts:90:27
     88|     it('should properly assign tools to ag…
     89|       const budgetCoach = agentRegistry.ge…
     90|       expect(budgetCoach).toBeDefined();
       |                           ^
     91|       expect(budgetCoach?.tools).toBeDefin…
     92|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/43]⎯

 FAIL  |agents| src/agents/__tests__/agentRegistry.test.ts > AgentRegistry > Agent Execution > should successfully run an agent with context
Error: Agent 'financial_advisor' not found
 ❯ AgentRegistry.runAgent src/agents/agentRegistry.ts:98:13
     96|     const agent = this.getAgent(agentName);
     97|     if (!agent) {
     98|       throw new Error(`Agent '${agentName}…
       |             ^
     99|     }
    100| 
 ❯ src/agents/__tests__/agentRegistry.test.ts:119:44

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/43]⎯

 FAIL  |agents| src/agents/__tests__/agentRegistry.test.ts > AgentRegistry > Agent Execution > should handle agent execution errors gracefully
AssertionError: expected [Function] to throw error including 'Failed to process request with financ…' but got 'Agent \'financial_advisor\' not found'

- Expected
+ Received

- Failed to process request with financial agent
+ Agent 'financial_advisor' not found

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/43]⎯

 FAIL  |agents| src/agents/__tests__/agentRegistry.test.ts > AgentRegistry > Agent Capabilities > should return correct capabilities for each agent
AssertionError: expected [] to include 'comprehensive_financial_guidance'
 ❯ src/agents/__tests__/agentRegistry.test.ts:148:35
    146|     it('should return correct capabilities…
    147|       const advisorCapabilities = agentReg…
    148|       expect(advisorCapabilities).toContai…
       |                                   ^
    149|       expect(advisorCapabilities).toContai…
    150| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/43]⎯

 FAIL  |agents| src/agents/__tests__/agentRegistry.test.ts > AgentRegistry > Agent Metrics > should return comprehensive metrics for all agents
AssertionError: expected { defaultModel: { …(4) }, …(20) } to have property "financial_advisor"
 ❯ src/agents/__tests__/agentRegistry.test.ts:166:23
    164|       const metrics = agentRegistry.getAge…
    165|       
    166|       expect(metrics).toHaveProperty('fina…
       |                       ^
    167|       expect(metrics).toHaveProperty('budg…
    168|       expect(metrics).toHaveProperty('tran…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/43]⎯

 FAIL  |agents| src/agents/__tests__/integration.test.ts > Agent API Integration Tests > POST /api/ai/chat > should handle basic chat request successfully
AssertionError: expected 404 to be 200 // Object.is equality

- Expected
+ Received

- 200
+ 404

 ❯ src/agents/__tests__/integration.test.ts:77:31
     75|         });
     76| 
     77|       expect(response.status).toBe(200);
       |                               ^
     78|       expect(response.body.ok).toBe(true);
     79|       expect(response.body.response).toBeD…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/43]⎯

 FAIL  |agents| src/agents/__tests__/integration.test.ts > Agent API Integration Tests > POST /api/ai/chat > should route to appropriate agent based on message
AssertionError: expected 404 to be 200 // Object.is equality

- Expected
+ Received

- 200
+ 404

 ❯ src/agents/__tests__/integration.test.ts:93:31
     91|         });
     92| 
     93|       expect(response.status).toBe(200);
       |                               ^
     94|       expect(response.body.agentName).toBe…
     95|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/43]⎯

 FAIL  |agents| src/agents/__tests__/integration.test.ts > Agent API Integration Tests > POST /api/ai/chat > should include conversation history when requested
AssertionError: expected 404 to be 200 // Object.is equality

- Expected
+ Received

- 200
+ 404

 ❯ src/agents/__tests__/integration.test.ts:123:31
    121|         });
    122| 
    123|       expect(response.status).toBe(200);
       |                               ^
    124|       expect(mockDbResponses.conversation.…
    125|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/43]⎯

 FAIL  |agents| src/agents/__tests__/integration.test.ts > Agent API Integration Tests > POST /api/ai/chat > should handle validation errors
AssertionError: expected 404 to be 400 // Object.is equality

- Expected
+ Received

- 400
+ 404

 ❯ src/agents/__tests__/integration.test.ts:135:31
    133|         });
    134| 
    135|       expect(response.status).toBe(400);
       |                               ^
    136|       expect(response.body.ok).toBe(false);
    137|       expect(response.body.code).toBe('VAL…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/43]⎯

 FAIL  |agents| src/agents/__tests__/integration.test.ts > Agent API Integration Tests > POST /api/ai/chat > should require authentication
AssertionError: expected 404 to be 401 // Object.is equality

- Expected
+ Received

- 401
+ 404

 ❯ src/agents/__tests__/integration.test.ts:147:31
    145|         });
    146| 
    147|       expect(response.status).toBe(401);
       |                               ^
    148|     });
    149|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/43]⎯

 FAIL  |agents| src/agents/__tests__/integration.test.ts > Agent API Integration Tests > POST /api/ai/tools/execute > should execute tool directly
AssertionError: expected 404 to be 200 // Object.is equality

- Expected
+ Received

- 200
+ 404

 ❯ src/agents/__tests__/integration.test.ts:165:31
    163|         });
    164| 
    165|       expect(response.status).toBe(200);
       |                               ^
    166|       expect(response.body.ok).toBe(true);
    167|       expect(response.body.toolName).toBe(…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/43]⎯

 FAIL  |agents| src/agents/__tests__/integration.test.ts > Agent API Integration Tests > POST /api/ai/tools/execute > should handle tool execution errors
AssertionError: expected 404 to be 200 // Object.is equality

- Expected
+ Received

- 200
+ 404

 ❯ src/agents/__tests__/integration.test.ts:180:31
    178|         });
    179| 
    180|       expect(response.status).toBe(200);
       |                               ^
    181|       expect(response.body.success).toBe(f…
    182|       expect(response.body.error).toContai…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/43]⎯

 FAIL  |agents| src/agents/__tests__/integration.test.ts > Agent API Integration Tests > POST /api/ai/handoff > should handle agent handoff successfully
AssertionError: expected 404 to be 200 // Object.is equality

- Expected
+ Received

- 200
+ 404

 ❯ src/agents/__tests__/integration.test.ts:199:31
    197|         });
    198| 
    199|       expect(response.status).toBe(200);
       |                               ^
    200|       expect(response.body.ok).toBe(true);
    201|       expect(response.body.handoffComplete…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/43]⎯

 FAIL  |agents| src/agents/__tests__/integration.test.ts > Agent API Integration Tests > POST /api/ai/handoff > should validate agent names in handoff
AssertionError: expected 404 to be 400 // Object.is equality

- Expected
+ Received

- 400
+ 404

 ❯ src/agents/__tests__/integration.test.ts:217:31
    215|         });
    216| 
    217|       expect(response.status).toBe(400);
       |                               ^
    218|       expect(response.body.code).toBe('INV…
    219|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/43]⎯

 FAIL  |agents| src/agents/__tests__/integration.test.ts > Agent API Integration Tests > GET /api/ai/agents > should return list of available agents
AssertionError: expected 404 to be 200 // Object.is equality

- Expected
+ Received

- 200
+ 404

 ❯ src/agents/__tests__/integration.test.ts:228:31
    226|         .set('Authorization', `Bearer ${au…
    227| 
    228|       expect(response.status).toBe(200);
       |                               ^
    229|       expect(response.body.ok).toBe(true);
    230|       expect(response.body.agents).toBeIns…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/43]⎯

 FAIL  |agents| src/agents/__tests__/integration.test.ts > Agent API Integration Tests > GET /api/ai/tools > should return list of available tools
AssertionError: expected 404 to be 200 // Object.is equality

- Expected
+ Received

- 200
+ 404

 ❯ src/agents/__tests__/integration.test.ts:249:31
    247|         .set('Authorization', `Bearer ${au…
    248| 
    249|       expect(response.status).toBe(200);
       |                               ^
    250|       expect(response.body.ok).toBe(true);
    251|       expect(response.body.tools).toBeInst…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/43]⎯

 FAIL  |agents| src/agents/__tests__/integration.test.ts > Agent API Integration Tests > GET /api/ai/tools > should filter tools by category
AssertionError: expected 404 to be 200 // Object.is equality

- Expected
+ Received

- 200
+ 404

 ❯ src/agents/__tests__/integration.test.ts:261:31
    259|         .set('Authorization', `Bearer ${au…
    260| 
    261|       expect(response.status).toBe(200);
       |                               ^
    262|       expect(response.body.tools.every((to…
    263|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/43]⎯

 FAIL  |agents| src/agents/__tests__/integration.test.ts > Agent API Integration Tests > GET /api/ai/sessions/:sessionId/history > should return conversation history
AssertionError: expected 404 to be 200 // Object.is equality

- Expected
+ Received

- 200
+ 404

 ❯ src/agents/__tests__/integration.test.ts:286:31
    284|         .set('Authorization', `Bearer ${au…
    285| 
    286|       expect(response.status).toBe(200);
       |                               ^
    287|       expect(response.body.ok).toBe(true);
    288|       expect(response.body.history).toBeIn…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[19/43]⎯

 FAIL  |agents| src/agents/__tests__/integration.test.ts > Agent API Integration Tests > GET /api/ai/status > should return system status
AssertionError: expected 404 to be 200 // Object.is equality

- Expected
+ Received

- 200
+ 404

 ❯ src/agents/__tests__/integration.test.ts:299:31
    297|         .set('Authorization', `Bearer ${au…
    298| 
    299|       expect(response.status).toBe(200);
       |                               ^
    300|       expect(response.body.ok).toBe(true);
    301|       expect(response.body.status).toBe('o…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[20/43]⎯

 FAIL  |agents| src/agents/__tests__/integration.test.ts > Agent API Integration Tests > Error Handling > should handle database connection errors gracefully
AssertionError: expected 404 to be 500 // Object.is equality

- Expected
+ Received

- 500
+ 404

 ❯ src/agents/__tests__/integration.test.ts:319:31
    317|         });
    318| 
    319|       expect(response.status).toBe(500);
       |                               ^
    320|       expect(response.body.ok).toBe(false);
    321|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[21/43]⎯

 FAIL  |agents| src/agents/__tests__/integration.test.ts > Agent API Integration Tests > Error Handling > should handle agent unavailability
AssertionError: expected 404 to be 500 // Object.is equality

- Expected
+ Received

- 500
+ 404

 ❯ src/agents/__tests__/integration.test.ts:333:31
    331|         });
    332| 
    333|       expect(response.status).toBe(500);
       |                               ^
    334|     });
    335|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[22/43]⎯

 FAIL  |agents| src/agents/__tests__/performance.test.ts > Agent Performance Tests > Agent Response Times > should respond within acceptable time limits
Error: Agent 'financial_advisor' not found
 ❯ AgentRegistry.runAgent src/agents/agentRegistry.ts:98:13
     96|     const agent = this.getAgent(agentName);
     97|     if (!agent) {
     98|       throw new Error(`Agent '${agentName}…
       |             ^
     99|     }
    100| 
 ❯ src/agents/__tests__/performance.test.ts:89:23
 ❯ measureExecutionTime src/agents/__tests__/performance.test.ts:10:24
 ❯ src/agents/__tests__/performance.test.ts:88:34

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[23/43]⎯

 FAIL  |agents| src/agents/__tests__/performance.test.ts > Agent Performance Tests > Agent Response Times > should handle multiple concurrent agent requests
Error: Agent 'financial_advisor' not found
 ❯ AgentRegistry.runAgent src/agents/agentRegistry.ts:98:13
     96|     const agent = this.getAgent(agentName);
     97|     if (!agent) {
     98|       throw new Error(`Agent '${agentName}…
       |             ^
     99|     }
    100| 
 ❯ src/agents/__tests__/performance.test.ts:100:23
 ❯ src/agents/__tests__/performance.test.ts:19:60
 ❯ runConcurrentOperations src/agents/__tests__/performance.test.ts:19:50
 ❯ src/agents/__tests__/performance.test.ts:104:9
 ❯ measureExecutionTime src/agents/__tests__/performance.test.ts:10:24
 ❯ src/agents/__tests__/performance.test.ts:103:34

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[24/43]⎯

 FAIL  |agents| src/agents/__tests__/performance.test.ts > Agent Performance Tests > Agent Response Times > should maintain performance with large financial context
Error: Agent 'transaction_analyst' not found
 ❯ AgentRegistry.runAgent src/agents/agentRegistry.ts:98:13
     96|     const agent = this.getAgent(agentName);
     97|     if (!agent) {
     98|       throw new Error(`Agent '${agentName}…
       |             ^
     99|     }
    100| 
 ❯ src/agents/__tests__/performance.test.ts:132:23
 ❯ measureExecutionTime src/agents/__tests__/performance.test.ts:10:24
 ❯ src/agents/__tests__/performance.test.ts:131:34

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[25/43]⎯

 FAIL  |agents| src/agents/__tests__/performance.test.ts > Agent Performance Tests > Tool Performance > should handle concurrent tool executions
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/agents/__tests__/performance.test.ts:171:36
    169|       expect(result).toHaveLength(concurre…
    170|       result.forEach((toolResult: any) => {
    171|         expect(toolResult.success).toBe(tr…
       |                                    ^
    172|       });
    173|     });
 ❯ src/agents/__tests__/performance.test.ts:170:14

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[26/43]⎯

 FAIL  |agents| src/agents/__tests__/performance.test.ts > Agent Performance Tests > Memory and Resource Usage > should not leak memory during repeated operations
Error: Agent 'financial_advisor' not found
 ❯ AgentRegistry.runAgent src/agents/agentRegistry.ts:98:13
     96|     const agent = this.getAgent(agentName);
     97|     if (!agent) {
     98|       throw new Error(`Agent '${agentName}…
       |             ^
     99|     }
    100| 
 ❯ src/agents/__tests__/performance.test.ts:188:29

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[27/43]⎯

 FAIL  |agents| src/agents/__tests__/performance.test.ts > Agent Performance Tests > Stress Testing > should handle high-frequency agent requests
Error: Agent 'financial_advisor' not found
 ❯ AgentRegistry.runAgent src/agents/agentRegistry.ts:98:13
     96|     const agent = this.getAgent(agentName);
     97|     if (!agent) {
     98|       throw new Error(`Agent '${agentName}…
       |             ^
     99|     }
    100| 
 ❯ src/agents/__tests__/performance.test.ts:231:23
 ❯ src/agents/__tests__/performance.test.ts:19:60
 ❯ runConcurrentOperations src/agents/__tests__/performance.test.ts:19:50
 ❯ src/agents/__tests__/performance.test.ts:234:29

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[28/43]⎯

 FAIL  |agents| src/agents/__tests__/performance.test.ts > Agent Performance Tests > Stress Testing > should gracefully degrade under extreme load
Error: Agent 'financial_advisor' not found
 ❯ AgentRegistry.runAgent src/agents/agentRegistry.ts:98:13
     96|     const agent = this.getAgent(agentName);
     97|     if (!agent) {
     98|       throw new Error(`Agent '${agentName}…
       |             ^
     99|     }
    100| 
 ❯ src/agents/__tests__/performance.test.ts:250:23
 ❯ src/agents/__tests__/performance.test.ts:19:60
 ❯ runConcurrentOperations src/agents/__tests__/performance.test.ts:19:50
 ❯ src/agents/__tests__/performance.test.ts:254:29

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[29/43]⎯

 FAIL  |agents| src/agents/__tests__/performance.test.ts > Agent Performance Tests > Edge Cases and Resilience > should handle malformed context gracefully
Error: Agent 'financial_advisor' not found
 ❯ AgentRegistry.runAgent src/agents/agentRegistry.ts:98:13
     96|     const agent = this.getAgent(agentName);
     97|     if (!agent) {
     98|       throw new Error(`Agent '${agentName}…
       |             ^
     99|     }
    100| 
 ❯ src/agents/__tests__/performance.test.ts:274:23
 ❯ measureExecutionTime src/agents/__tests__/performance.test.ts:10:24
 ❯ src/agents/__tests__/performance.test.ts:273:34

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[30/43]⎯

 FAIL  |agents| src/agents/__tests__/performance.test.ts > Agent Performance Tests > Edge Cases and Resilience > should handle very long messages efficiently
Error: Agent 'financial_advisor' not found
 ❯ AgentRegistry.runAgent src/agents/agentRegistry.ts:98:13
     96|     const agent = this.getAgent(agentName);
     97|     if (!agent) {
     98|       throw new Error(`Agent '${agentName}…
       |             ^
     99|     }
    100| 
 ❯ src/agents/__tests__/performance.test.ts:285:23
 ❯ measureExecutionTime src/agents/__tests__/performance.test.ts:10:24
 ❯ src/agents/__tests__/performance.test.ts:284:34

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[31/43]⎯

 FAIL  |agents| src/agents/__tests__/performance.test.ts > Agent Performance Tests > Edge Cases and Resilience > should maintain performance with frequent agent switching
Error: Agent 'financial_advisor' not found
 ❯ AgentRegistry.runAgent src/agents/agentRegistry.ts:98:13
     96|     const agent = this.getAgent(agentName);
     97|     if (!agent) {
     98|       throw new Error(`Agent '${agentName}…
       |             ^
     99|     }
    100| 
 ❯ src/agents/__tests__/performance.test.ts:299:31
 ❯ measureExecutionTime src/agents/__tests__/performance.test.ts:10:24
 ❯ src/agents/__tests__/performance.test.ts:296:34

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[32/43]⎯

 FAIL  |agents| src/agents/__tests__/validation.test.ts > Data Validation Tests > Schema Validation > AgentConfigSchema > should validate correct agent configuration
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/agents/__tests__/validation.test.ts:57:32
     55| 
     56|         const result = AgentConfigSchema.s…
     57|         expect(result.success).toBe(true);
       |                                ^
     58|       });
     59| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[33/43]⎯

 FAIL  |agents| src/agents/__tests__/validation.test.ts > Data Validation Tests > Tool Parameter Validation > should reject invalid tool parameters
AssertionError: expected 'Tool not found: create_envelope' to contain 'validation'

- Expected
+ Received

- validation
+ Tool not found: create_envelope

 ❯ src/agents/__tests__/validation.test.ts:217:28
    215|       const result = await toolRegistry.ex…
    216|       expect(result.success).toBe(false);
    217|       expect(result.error).toContain('vali…
       |                            ^
    218|     });
    219|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[34/43]⎯

 FAIL  |agents| src/agents/__tests__/validation.test.ts > Data Validation Tests > Error Handling Validation > should handle database validation errors gracefully
AssertionError: expected 'Tool not found: budget_analysis' to contain 'Validation failed'

- Expected
+ Received

- Validation failed
+ Tool not found: budget_analysis

 ❯ src/agents/__tests__/validation.test.ts:242:28
    240| 
    241|       expect(result.success).toBe(false);
    242|       expect(result.error).toContain('Vali…
       |                            ^
    243|     });
    244| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[35/43]⎯

 FAIL  |agents| src/agents/__tests__/validation.test.ts > Data Validation Tests > Error Handling Validation > should validate agent handoff parameters
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/agents/__tests__/validation.test.ts:260:30
    258|       );
    259| 
    260|       expect(result.success).toBe(true);
       |                              ^
    261|     });
    262| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[36/43]⎯

 FAIL  |agents| src/agents/__tests__/validation.test.ts > Data Validation Tests > Error Handling Validation > should reject invalid handoff parameters
AssertionError: expected 'Tool not found: agent_handoff' to contain 'validation'

- Expected
+ Received

- validation
+ Tool not found: agent_handoff

 ❯ src/agents/__tests__/validation.test.ts:278:28
    276| 
    277|       expect(result.success).toBe(false);
    278|       expect(result.error).toContain('vali…
       |                            ^
    279|     });
    280|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[37/43]⎯

 FAIL  |agents| src/agents/__tests__/validation.test.ts > Data Validation Tests > Input Sanitization > should sanitize user input messages
Error: Agent 'financial_advisor' not found
 ❯ AgentRegistry.runAgent src/agents/agentRegistry.ts:98:13
     96|     const agent = this.getAgent(agentName);
     97|     if (!agent) {
     98|       throw new Error(`Agent '${agentName}…
       |             ^
     99|     }
    100| 
 ❯ src/agents/__tests__/validation.test.ts:286:42

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[38/43]⎯

 FAIL  |agents| src/agents/__tests__/validation.test.ts > Data Validation Tests > Input Sanitization > should handle SQL injection attempts in parameters
AssertionError: expected 'Tool not found: categorize_transaction' to contain 'validation'

- Expected
+ Received

- validation
+ Tool not found: categorize_transaction

 ❯ src/agents/__tests__/validation.test.ts:311:28
    309|       // Should handle gracefully without …
    310|       expect(result.success).toBe(false);
    311|       expect(result.error).toContain('vali…
       |                            ^
    312|     });
    313| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[39/43]⎯

 FAIL  |agents| src/agents/__tests__/validation.test.ts > Data Validation Tests > Input Sanitization > should validate envelope creation with proper limits
AssertionError: expected 'Tool not found: create_envelope' to contain 'validation'

- Expected
+ Received

- validation
+ Tool not found: create_envelope

 ❯ src/agents/__tests__/validation.test.ts:329:28
    327| 
    328|       expect(result.success).toBe(false);
    329|       expect(result.error).toContain('vali…
       |                            ^
    330|     });
    331|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[40/43]⎯

 FAIL  |agents| src/agents/__tests__/validation.test.ts > Data Validation Tests > Business Logic Validation > should validate financial constraints
AssertionError: expected 'Tool not found: transfer_funds' to contain 'positive amount'

- Expected
+ Received

- positive amount
+ Tool not found: transfer_funds

 ❯ src/agents/__tests__/validation.test.ts:373:28
    371| 
    372|       expect(result.success).toBe(false);
    373|       expect(result.error).toContain('posi…
       |                            ^
    374|     });
    375| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[41/43]⎯

 FAIL  |agents| src/agents/__tests__/validation.test.ts > Data Validation Tests > Business Logic Validation > should validate budget constraints
AssertionError: expected 'Tool not found: create_envelope' to contain 'validation'

- Expected
+ Received

- validation
+ Tool not found: create_envelope

 ❯ src/agents/__tests__/validation.test.ts:391:28
    389| 
    390|       expect(result.success).toBe(false);
    391|       expect(result.error).toContain('vali…
       |                            ^
    392|     });
    393| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[42/43]⎯

 FAIL  |agents| src/agents/__tests__/validation.test.ts > Data Validation Tests > Business Logic Validation > should validate date constraints
AssertionError: expected false to be true // Object.is equality

- Expected
+ Received

- true
+ false

 ❯ src/agents/__tests__/validation.test.ts:409:30
    407| 
    408|       // Should handle past dates graceful…
    409|       expect(result.success).toBe(true);
       |                              ^
    410|       if (result.success && result.result.…
    411|         expect(result.result.warnings).toC…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[43/43]⎯

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯ Unhandled Errors ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯

Vitest caught 1 unhandled error during the test run.
This might cause false positive tests. Resolve unhandled errors to make sure your tests are not affected.

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯ Unhandled Rejection ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Error: process.exit unexpectedly called with "1"
 ❯ process.exit node_modules/vitest/dist/vendor/execute.fL3szUAI.js:401:11
 ❯ startServer src/server.ts:161:13
    159|   } catch (error) {
    160|     logger.error({ error }, 'Failed to sta…
    161|     process.exit(1);
       |             ^
    162|   }
    163| }
 ❯ src/server.ts:167:3
 ❯ processTicksAndRejections node:internal/process/task_queues:105:5
 ❯ VitestExecutor.runModule node_modules/vite-node/dist/client.mjs:362:5
 ❯ VitestExecutor.directRequest node_modules/vite-node/dist/client.mjs:346:5
 ❯ VitestExecutor.cachedRequest node_modules/vite-node/dist/client.mjs:189:14
 ❯ VitestMocker.importActual node_modules/vitest/dist/vendor/execute.fL3szUAI.js:311:20
 ❯ src/agents/__tests__/setup.ts:38:18
 ❯ VitestMocker.callFunctionMock node_modules/vitest/dist/vendor/execute.fL3szUAI.js:132:17

This error originated in "src/agents/__tests__/integration.test.ts" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯

 Test Files  4 failed | 1 passed (5)
      Tests  43 failed | 31 passed (74)
     Errors  1 error
   Start at  19:05:28
   Duration  2.60s (transform 726ms, setup 89ms, collect 1.82s, tests 284ms, environment 0ms, prepare 90ms)

JUNIT report written to /home/runner/workspace/src/agents/test-results/agents-junit.xml